name: 'Deploy Api TRACKME (SAMPLE) development'

on:
  push:
    branches:
      - main
    paths:
      - apps/trackme/**
  workflow_dispatch:
  # pull_request:
  #   branches:
  #       - stable
  #   types: [closed]

# permissions:
#   contents: read
#   # Needed for the 'trilom/file-changes-action' action
#   pull-requests: read
permissions: write-all

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  run-migration:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Project: trackme"
          echo "Mode: development"

      - name: Checkout
        uses: actions/checkout@v3

      - run: |
          git pull

      - name: 'Setup Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Use .npmrc
        uses: bduff9/use-npmrc@v1.2
        with:
          dot-npmrc: ${{ secrets.DOT_NPMRC }}

      - name: yarn install
        run: yarn install

      - name: yarn global add sequelize-cli@6.2.0
        run: yarn global add sequelize-cli@6.2.0

      - name: 'Create env.development file'
        run: |
          touch ./apps/trackme/.env.development
          echo DB_PORT=${{ secrets.DB_PORT_DEVELOPMENT }} >> ./apps/trackme/.env.development
          echo DB_DIALECT=postgres >> ./apps/trackme/.env.development
          echo DB_HOST=${{ secrets.DB_HOST_DEVELOPMENT }} >> ./apps/trackme/.env.development
          echo DB_USER=${{ secrets.DB_USER_DEVELOPMENT }} >> ./apps/trackme/.env.development
          echo DB_PASS=${{ secrets.DB_PASS_DEVELOPMENT }} >> ./apps/trackme/.env.development
          echo DB_NAME=${{ secrets.DB_NAME_DEVELOPMENT }} >> ./apps/trackme/.env.development
          cat ./apps/trackme/.env.development

      - name: run migration
        run: |
          ./run_migration.sh trackme development

  deploy:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Project: trackme"
          echo "Mode: development"

      - name: Checkout
        uses: actions/checkout@v3

      - run: |
          git pull

      - name: 'Setup Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: culshaw/read-package-node-version-actions@v1
        with:
          path: './'
        id: package-json

      - name: Show version number
        run: echo "${{ steps.package-json.outputs.version }}"

      - name: Use .npmrc
        uses: bduff9/use-npmrc@v1.2
        with:
          dot-npmrc: ${{ secrets.DOT_NPMRC }}

      - name: yarn install
        run: yarn install

      - name: Build
        env:
          CI: false
        run: |
          ls -la
          yarn nest build trackme
          echo "-- build success"
          cp yarn.lock ./dist/apps/trackme
          cp package.json ./dist/apps/trackme
          cp apps/trackme/ecosystem-development.config.js ./dist/apps/trackme/ecosystem.config.js
          cp -r node_modules ./dist/apps/trackme
          echo "-- copy yarn.lock - node_modules success"
          cp install_only.sh ./dist/apps/trackme
          echo "-- copy install_only.sh success"
          touch ./dist/apps/trackme/.npmrc
          echo "${{ secrets.DOT_NPMRC }}" >> ./dist/apps/trackme/.npmrc
          echo "-- create .npmrc success"

      - name: Upload to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEVELOPMENT }}
          username: ${{ secrets.SSH_USER_DEVELOPMENT }}
          port: ${{ secrets.SSH_PORT_DEVELOPMENT }}
          key: ${{ secrets.SSH_KEY_DEVELOPMENT }}
          # Selecting all folders except "node_modules"
          # source: ".,!node_modules"
          source: './dist/apps/trackme/'
          # The path is trackmed on the directory where the user logged into the server starts
          target: '/var/www/html/apps/trackme-api-development'
          # rm: true

      - name: Restart PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_DEVELOPMENT }}
          username: ${{ secrets.SSH_USER_DEVELOPMENT }}
          port: ${{ secrets.SSH_PORT_DEVELOPMENT }}
          key: ${{ secrets.SSH_KEY_DEVELOPMENT }}
          script: |
            cp /env/.env.trackme-api-development /var/www/html/apps/trackme-api-development/dist/apps/trackme/.env
            cd /var/www/html/apps/trackme-api-development/dist/apps/trackme
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            ./install_only.sh
            pm2 delete trackme-api-development
            pm2 start

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üè° TRACKME (SAMPLE) API development v${{ steps.package-json.outputs.version }} üè°
            Has been deployed by ${{ github.actor }}

            Ready for test. Thanks
